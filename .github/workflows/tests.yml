on:
  push:
    branches: [main, dev]
  pull_request:

name: 64-bit CI

jobs:
  run-tests:
    runs-on: ${{ matrix.os }}
    #container:
    #  image: ubuntu:20.10
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust:
          - stable
          - 1.57.0
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: recursive
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@cargo-hack
      - run: sudo apt-get update -y
        if: matrix.os == 'ubuntu-latest'
      - name: cargo check (powerset)
        run: cargo hack check --feature-powerset --no-dev-deps
      - name: cargo check examples (powerset)
        run: cargo hack check --examples --feature-powerset
      - name: run tests (powerset)
        run: |
            cargo hack test --all-targets --feature-powerset
      - name: run doc tests (powerset)
        run: |
            cargo hack test --doc --feature-powerset

  fmt:
    name: rust fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: recursive
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - run: |
          /bin/bash -c "find src -type f | grep -v auto_bindings | grep -v lib | xargs rustfmt --check"

  clippy:
    name: clippy!!
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - 1.57.0
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@cargo-hack
      - name: clippy (all targets, feature powerset)
        run: cargo hack clippy --all-targets --feature-powerset -- -D warnings
